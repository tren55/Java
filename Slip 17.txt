Slip 17

1.Write a java program to accept ‘N’ integers from a user. Store and display integers in sorted
order having proper collection class. The collection should not accept duplicate elements.


import java.util.Scanner;
import java.util.TreeSet;
public class SortedIntegersDemo {
 public static void main(String[] args) {
 Scanner sc = new Scanner(System.in);
 // Accept the number of integers to be entered
 System.out.print("Enter the number of integers: ");
 int n = sc.nextInt();
 // Accept the integers and add them to a TreeSet
 TreeSet<Integer> set = new TreeSet<Integer>();
 System.out.print("Enter " + n + " integers: ");
 for (int i = 0; i < n; i++) {
 int num = sc.nextInt();
 set.add(num);
 }
 // Display the sorted integers on the console
 System.out.print("Sorted integers: ");
 for (int num : set) {
 System.out.print(num + " ");
 }
 sc.close();
 }
}

------------------------------------------------------------------


2.Write a Multithreading program in java to display the number’s between 1 to 100
continuously in a TextField by clicking on button. (Use Runnable Interface).


import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
public class NumberDisplay implements Runnable, ActionListener {
 private JFrame frame;
 private JTextField textField;
 private JButton startButton, stopButton;
 private boolean running;
 public NumberDisplay() {
 frame = new JFrame("Number Display");
 frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
 textField = new JTextField(10);
 startButton = new JButton("Start");
 stopButton = new JButton("Stop");
 startButton.addActionListener(this);
 stopButton.addActionListener(this);
 JPanel panel = new JPanel();
 panel.add(textField);
 panel.add(startButton);
 panel.add(stopButton);
 frame.getContentPane().add(panel, BorderLayout.CENTER);
 frame.pack();
 frame.setVisible(true);
 }
 public void run() {
 int i = 1;
 while (running) {
 try {
 Thread.sleep(100);
 } catch (InterruptedException e) {
 e.printStackTrace();
 }
 textField.setText(Integer.toString(i));
 i++;
 if (i > 100) {
 i = 1;
 }
 }
 }
 public void actionPerformed(ActionEvent e) {
 if (e.getSource() == startButton) {
 if (!running) {
 running = true;
 Thread thread = new Thread(this);
 thread.start();
 }
 } else if (e.getSource() == stopButton) {
 running = false;
 }
 }
 public static void main(String[] args) {
 new NumberDisplay();
 }
}